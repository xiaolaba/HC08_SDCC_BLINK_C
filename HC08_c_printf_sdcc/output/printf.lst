                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.6.0 #9615 (MINGW64)
                              4 ;--------------------------------------------------------
                              5 	.module printf
                              6 	.optsdcc -mhc08
                              7 	
                              8 	.area HOME    (CODE)
                              9 	.area GSINIT0 (CODE)
                             10 	.area GSINIT  (CODE)
                             11 	.area GSFINAL (CODE)
                             12 	.area CSEG    (CODE)
                             13 	.area XINIT   (CODE)
                             14 	.area CONST   (CODE)
                             15 	.area DSEG    (PAG)
                             16 	.area OSEG    (PAG, OVR)
                             17 	.area XSEG
                             18 	.area XISEG
                             19 ;--------------------------------------------------------
                             20 ; Public variables in this module
                             21 ;--------------------------------------------------------
                             22 	.globl _putchar
                             23 	.globl _tfp_printf
                             24 ;--------------------------------------------------------
                             25 ; ram data
                             26 ;--------------------------------------------------------
                             27 	.area DSEG    (PAG)
                             28 ;--------------------------------------------------------
                             29 ; overlayable items in ram 
                             30 ;--------------------------------------------------------
                             31 ;--------------------------------------------------------
                             32 ; absolute ram data
                             33 ;--------------------------------------------------------
                             34 	.area IABS    (ABS)
                             35 	.area IABS    (ABS)
                             36 ;--------------------------------------------------------
                             37 ; absolute external ram data
                             38 ;--------------------------------------------------------
                             39 	.area XABS    (ABS)
                             40 ;--------------------------------------------------------
                             41 ; external initialized ram data
                             42 ;--------------------------------------------------------
                             43 	.area XISEG
                             44 ;--------------------------------------------------------
                             45 ; extended address mode data
                             46 ;--------------------------------------------------------
                             47 	.area XSEG
   0000                      48 _bf:
   0000                      49 	.ds 2
   0002                      50 _buf:
   0002                      51 	.ds 12
   000E                      52 _num:
   000E                      53 	.ds 2
   0010                      54 _uc:
   0010                      55 	.ds 1
   0011                      56 _zs:
   0011                      57 	.ds 1
                             58 ;--------------------------------------------------------
                             59 ; global & static initialisations
                             60 ;--------------------------------------------------------
                             61 	.area HOME    (CODE)
                             62 	.area GSINIT  (CODE)
                             63 	.area GSFINAL (CODE)
                             64 	.area GSINIT  (CODE)
                             65 ;--------------------------------------------------------
                             66 ; Home
                             67 ;--------------------------------------------------------
                             68 	.area HOME    (CODE)
                             69 	.area HOME    (CODE)
                             70 ;--------------------------------------------------------
                             71 ; code
                             72 ;--------------------------------------------------------
                             73 	.area CSEG    (CODE)
                             74 ;------------------------------------------------------------
                             75 ;Allocation info for local variables in function 'out'
                             76 ;------------------------------------------------------------
                             77 ;c                         Allocated to registers a 
                             78 ;------------------------------------------------------------
                             79 ;printf.c:33: static void out(char c) {
                             80 ;	-----------------------------------------
                             81 ;	 function out
                             82 ;	-----------------------------------------
                             83 ;	Register assignment is optimal.
                             84 ;	Stack space usage: 0 bytes.
   0000                      85 _out:
                             86 ;printf.c:34: *bf++ = c;
   0000 CEr00r00      [ 4]   87 	ldx	_bf
   0003 89            [ 2]   88 	pshx
   0004 8A            [ 2]   89 	pulh
   0005 CEr00r01      [ 4]   90 	ldx	(_bf + 1)
   0008 F7            [ 2]   91 	sta	,x
   0009 45r00r00      [ 3]   92 	ldhx	#_bf
   000C 6C 01         [ 4]   93 	inc	1,x
   000E 26 01         [ 3]   94 	bne	00103$
   0010 7C            [ 3]   95 	inc	,x
   0011                      96 00103$:
   0011 81            [ 4]   97 	rts
                             98 ;------------------------------------------------------------
                             99 ;Allocation info for local variables in function 'outDgt'
                            100 ;------------------------------------------------------------
                            101 ;dgt                       Allocated to registers h 
                            102 ;------------------------------------------------------------
                            103 ;printf.c:37: static void outDgt(char dgt) {
                            104 ;	-----------------------------------------
                            105 ;	 function outDgt
                            106 ;	-----------------------------------------
                            107 ;	Register assignment is optimal.
                            108 ;	Stack space usage: 0 bytes.
   0012                     109 _outDgt:
   0012 87            [ 2]  110 	psha
   0013 8A            [ 2]  111 	pulh
                            112 ;printf.c:38: out(dgt+(dgt<10 ? '0' : (uc ? 'A' : 'a')-10));
   0014 8B            [ 2]  113 	pshh
   0015 86            [ 2]  114 	pula
   0016 A1 0A         [ 2]  115 	cmp	#0x0a
   0018 24 05         [ 3]  116 	bcc	00103$
   001A 5F            [ 1]  117 	clrx
   001B A6 30         [ 2]  118 	lda	#0x30
   001D 20 16         [ 3]  119 	bra	00104$
   001F                     120 00103$:
   001F C6r00r10      [ 4]  121 	lda	_uc
   0022 27 05         [ 3]  122 	beq	00105$
   0024 5F            [ 1]  123 	clrx
   0025 A6 41         [ 2]  124 	lda	#0x41
   0027 20 03         [ 3]  125 	bra	00106$
   0029                     126 00105$:
   0029 5F            [ 1]  127 	clrx
   002A A6 61         [ 2]  128 	lda	#0x61
   002C                     129 00106$:
   002C A0 0A         [ 2]  130 	sub	#0x0a
   002E 87            [ 2]  131 	psha
   002F 49            [ 1]  132 	rola	
   0030 4F            [ 1]  133 	clra	
   0031 A2 00         [ 2]  134 	sbc	#0x00
   0033 97            [ 1]  135 	tax
   0034 86            [ 2]  136 	pula
   0035                     137 00104$:
   0035 8B            [ 2]  138 	pshh
   0036 9E EB 01      [ 4]  139 	add	1,s
   0039 A7 01         [ 2]  140 	ais	#1
   003B CDr00r00      [ 5]  141 	jsr	_out
                            142 ;printf.c:39: zs=1;
   003E A6 01         [ 2]  143 	lda	#0x01
   0040 C7r00r11      [ 4]  144 	sta	_zs
   0043 81            [ 4]  145 	rts
                            146 ;------------------------------------------------------------
                            147 ;Allocation info for local variables in function 'divOut'
                            148 ;------------------------------------------------------------
                            149 ;div                       Allocated to stack - sp -4
                            150 ;dgt                       Allocated to registers 
                            151 ;------------------------------------------------------------
                            152 ;printf.c:42: static void divOut(unsigned int div) {
                            153 ;	-----------------------------------------
                            154 ;	 function divOut
                            155 ;	-----------------------------------------
                            156 ;	Register assignment is optimal.
                            157 ;	Stack space usage: 2 bytes.
   0044                     158 _divOut:
   0044 87            [ 2]  159 	psha
   0045 89            [ 2]  160 	pshx
                            161 ;printf.c:44: num &= 0xffff; // just for testing the code  with 32 bit ints
                            162 ;printf.c:45: while (num>=div) {
   0046 5F            [ 1]  163 	clrx
   0047                     164 00101$:
   0047 C6r00r0F      [ 4]  165 	lda	(_num + 1)
   004A 9E E0 02      [ 4]  166 	sub	2,s
   004D C6r00r0E      [ 4]  167 	lda	_num
   0050 9E E2 01      [ 4]  168 	sbc	1,s
   0053 25 16         [ 3]  169 	bcs	00112$
                            170 ;printf.c:46: num -= div;
   0055 C6r00r0F      [ 4]  171 	lda	(_num + 1)
   0058 9E E0 02      [ 4]  172 	sub	2,s
   005B C7r00r0F      [ 4]  173 	sta	(_num + 1)
   005E C6r00r0E      [ 4]  174 	lda	_num
   0061 9E E2 01      [ 4]  175 	sbc	1,s
   0064 C7r00r0E      [ 4]  176 	sta	_num
                            177 ;printf.c:47: dgt++;
   0067 AF 01         [ 2]  178 	aix	#1
   0069 20 DC         [ 3]  179 	bra	00101$
   006B                     180 00112$:
                            181 ;printf.c:49: if (zs || dgt>0) 
   006B C6r00r11      [ 4]  182 	lda	_zs
   006E 26 03         [ 3]  183 	bne	00104$
   0070 5D            [ 1]  184 	tstx
   0071 27 04         [ 3]  185 	beq	00107$
   0073                     186 00104$:
                            187 ;printf.c:50: outDgt(dgt);
   0073 9F            [ 1]  188 	txa
   0074 CDr00r12      [ 5]  189 	jsr	_outDgt
   0077                     190 00107$:
   0077 A7 02         [ 2]  191 	ais	#2
   0079 81            [ 4]  192 	rts
                            193 ;------------------------------------------------------------
                            194 ;Allocation info for local variables in function 'tfp_printf'
                            195 ;------------------------------------------------------------
                            196 ;fmt                       Allocated to stack - sp -13
                            197 ;va                        Allocated to stack - sp -25
                            198 ;ch                        Allocated to stack - sp -26
                            199 ;p                         Allocated to stack - sp -28
                            200 ;lz                        Allocated to stack - sp -30
                            201 ;w                         Allocated to stack - sp -29
                            202 ;sloc0                     Allocated to stack - sp -18
                            203 ;sloc1                     Allocated to stack - sp -17
                            204 ;sloc2                     Allocated to stack - sp -20
                            205 ;sloc3                     Allocated to stack - sp -22
                            206 ;sloc4                     Allocated to stack - sp -23
                            207 ;------------------------------------------------------------
                            208 ;printf.c:53: void tfp_printf(char *fmt, ...)
                            209 ;	-----------------------------------------
                            210 ;	 function tfp_printf
                            211 ;	-----------------------------------------
                            212 ;	Register assignment might be sub-optimal.
                            213 ;	Stack space usage: 15 bytes.
   007A                     214 _tfp_printf:
   007A A7 F1         [ 2]  215 	ais	#-15
                            216 ;printf.c:59: va_start(va,fmt);
   007C 95            [ 2]  217 	tsx
   007D AF 11         [ 2]  218 	aix	#17
   007F AF 02         [ 2]  219 	aix	#2
   0081 8B            [ 2]  220 	pshh
   0082 86            [ 2]  221 	pula
   0083 9E E7 06      [ 4]  222 	sta	6,s
   0086 9E EF 07      [ 4]  223 	stx	7,s
                            224 ;printf.c:61: while ((ch=*(fmt++))) {
   0089                     225 00136$:
   0089 9E E6 12      [ 4]  226 	lda	18,s
   008C 87            [ 2]  227 	psha
   008D 8A            [ 2]  228 	pulh
   008E 9E EE 13      [ 4]  229 	ldx	19,s
   0091 F6            [ 2]  230 	lda	,x
   0092 9E E7 0D      [ 4]  231 	sta	13,s
   0095 AF 01         [ 2]  232 	aix	#1
   0097 8B            [ 2]  233 	pshh
   0098 86            [ 2]  234 	pula
   0099 9E E7 12      [ 4]  235 	sta	18,s
   009C 9E EF 13      [ 4]  236 	stx	19,s
   009F 95            [ 2]  237 	tsx
   00A0 E6 0C         [ 3]  238 	lda	12,x
   00A2 6D 0C         [ 3]  239 	tst	12,x
   00A4 26 03         [ 3]  240 	bne	00255$
   00A6 CCr03r44      [ 3]  241 	jmp	00140$
   00A9                     242 00255$:
                            243 ;printf.c:62: if (ch!='%') {
   00A9 97            [ 1]  244 	tax
   00AA 8C            [ 1]  245 	clrh
   00AB 65 00 25      [ 3]  246 	cphx	#0x0025
   00AE 27 05         [ 3]  247 	beq	00134$
                            248 ;printf.c:63: putchar(ch);
   00B0 CDr00r00      [ 5]  249 	jsr	_putchar
   00B3 20 D4         [ 3]  250 	bra	00136$
   00B5                     251 00134$:
                            252 ;printf.c:66: char lz=0;
   00B5 95            [ 2]  253 	tsx
   00B6 4F            [ 1]  254 	clra
   00B7 F7            [ 2]  255 	sta	,x
                            256 ;printf.c:67: char w=0;
   00B8 E7 01         [ 3]  257 	sta	1,x
                            258 ;printf.c:68: ch=*(fmt++);
   00BA E6 11         [ 3]  259 	lda	17,x
   00BC 87            [ 2]  260 	psha
   00BD 8A            [ 2]  261 	pulh
   00BE 9E EE 13      [ 4]  262 	ldx	19,s
   00C1 F6            [ 2]  263 	lda	,x
   00C2 9E E7 05      [ 4]  264 	sta	5,s
   00C5 AF 01         [ 2]  265 	aix	#1
   00C7 8B            [ 2]  266 	pshh
   00C8 86            [ 2]  267 	pula
   00C9 9E E7 12      [ 4]  268 	sta	18,s
   00CC 9E EF 13      [ 4]  269 	stx	19,s
                            270 ;printf.c:69: if (ch=='0') {
   00CF 9E EE 05      [ 4]  271 	ldx	5,s
   00D2 8C            [ 1]  272 	clrh
   00D3 65 00 30      [ 3]  273 	cphx	#0x0030
   00D6 26 1B         [ 3]  274 	bne	00102$
                            275 ;printf.c:70: ch=*(fmt++);
   00D8 9E E6 12      [ 4]  276 	lda	18,s
   00DB 87            [ 2]  277 	psha
   00DC 8A            [ 2]  278 	pulh
   00DD 9E EE 13      [ 4]  279 	ldx	19,s
   00E0 F6            [ 2]  280 	lda	,x
   00E1 9E E7 05      [ 4]  281 	sta	5,s
   00E4 AF 01         [ 2]  282 	aix	#1
   00E6 8B            [ 2]  283 	pshh
   00E7 86            [ 2]  284 	pula
   00E8 9E E7 12      [ 4]  285 	sta	18,s
   00EB 9E EF 13      [ 4]  286 	stx	19,s
                            287 ;printf.c:71: lz=1;
   00EE A6 01         [ 2]  288 	lda	#0x01
   00F0 9E E7 01      [ 4]  289 	sta	1,s
   00F3                     290 00102$:
                            291 ;printf.c:62: if (ch!='%') {
   00F3 9E EE 05      [ 4]  292 	ldx	5,s
   00F6 8C            [ 1]  293 	clrh
                            294 ;printf.c:73: if (ch>='0' && ch<='9') {
   00F7 65 00 30      [ 3]  295 	cphx	#0x0030
   00FA 91 59         [ 3]  296 	blt	00108$
   00FC 65 00 39      [ 3]  297 	cphx	#0x0039
   00FF 92 54         [ 3]  298 	bgt	00108$
                            299 ;printf.c:74: w=0;
   0101 95            [ 2]  300 	tsx
   0102 4F            [ 1]  301 	clra
   0103 E7 01         [ 3]  302 	sta	1,x
                            303 ;printf.c:75: while (ch>='0' && ch<='9') {
   0105 E6 11         [ 3]  304 	lda	17,x
   0107 E7 0D         [ 3]  305 	sta	13,x
   0109 E6 12         [ 3]  306 	lda	18,x
   010B E7 0E         [ 3]  307 	sta	14,x
   010D                     308 00104$:
                            309 ;printf.c:62: if (ch!='%') {
   010D 9E EE 05      [ 4]  310 	ldx	5,s
   0110 8C            [ 1]  311 	clrh
                            312 ;printf.c:75: while (ch>='0' && ch<='9') {
   0111 65 00 30      [ 3]  313 	cphx	#0x0030
   0114 91 33         [ 3]  314 	blt	00171$
   0116 65 00 39      [ 3]  315 	cphx	#0x0039
   0119 92 2E         [ 3]  316 	bgt	00171$
                            317 ;printf.c:76: w=(((w<<2)+w)<<1)+ch-'0';
   011B 95            [ 2]  318 	tsx
   011C E6 01         [ 3]  319 	lda	1,x
   011E 48            [ 1]  320 	lsla	
   011F 48            [ 1]  321 	lsla	
   0120 EB 01         [ 3]  322 	add	1,x
   0122 48            [ 1]  323 	lsla	
   0123 EB 04         [ 3]  324 	add	4,x
   0125 A0 30         [ 2]  325 	sub	#0x30
   0127 E7 01         [ 3]  326 	sta	1,x
                            327 ;printf.c:77: ch=*fmt++;
   0129 E6 0D         [ 3]  328 	lda	13,x
   012B 87            [ 2]  329 	psha
   012C 8A            [ 2]  330 	pulh
   012D 9E EE 0F      [ 4]  331 	ldx	15,s
   0130 F6            [ 2]  332 	lda	,x
   0131 9E E7 05      [ 4]  333 	sta	5,s
   0134 AF 01         [ 2]  334 	aix	#1
   0136 8B            [ 2]  335 	pshh
   0137 86            [ 2]  336 	pula
   0138 9E E7 0E      [ 4]  337 	sta	14,s
   013B 9E EF 0F      [ 4]  338 	stx	15,s
   013E 95            [ 2]  339 	tsx
   013F E6 0D         [ 3]  340 	lda	13,x
   0141 E7 11         [ 3]  341 	sta	17,x
   0143 E6 0E         [ 3]  342 	lda	14,x
   0145 E7 12         [ 3]  343 	sta	18,x
   0147 20 C4         [ 3]  344 	bra	00104$
   0149                     345 00171$:
   0149 9E E6 0E      [ 4]  346 	lda	14,s
   014C 9E E7 12      [ 4]  347 	sta	18,s
   014F 9E E6 0F      [ 4]  348 	lda	15,s
   0152 9E E7 13      [ 4]  349 	sta	19,s
   0155                     350 00108$:
                            351 ;printf.c:80: bf=buf;
   0155 A6s00         [ 2]  352 	lda	#>_buf
   0157 C7r00r00      [ 4]  353 	sta	_bf
   015A A6r02         [ 2]  354 	lda	#_buf
   015C C7r00r01      [ 4]  355 	sta	(_bf + 1)
                            356 ;printf.c:81: p=bf;
   015F A6s00         [ 2]  357 	lda	#>_buf
   0161 9E E7 03      [ 4]  358 	sta	3,s
   0164 A6r02         [ 2]  359 	lda	#_buf
   0166 9E E7 04      [ 4]  360 	sta	4,s
                            361 ;printf.c:82: zs=0;
   0169 4F            [ 1]  362 	clra
   016A C7r00r11      [ 4]  363 	sta	_zs
                            364 ;printf.c:83: switch (ch) {
   016D 9E E6 05      [ 4]  365 	lda	5,s
   0170 A1 00         [ 2]  366 	cmp	#0x00
   0172 26 03         [ 3]  367 	bne	00262$
   0174 CCr03r44      [ 3]  368 	jmp	00140$
   0177                     369 00262$:
   0177 A3 25         [ 2]  370 	cpx	#0x25
   0179 26 09         [ 3]  371 	bne	00263$
   017B 8B            [ 2]  372 	pshh
   017C 86            [ 2]  373 	pula
   017D A1 00         [ 2]  374 	cmp	#0x00
   017F 26 03         [ 3]  375 	bne	00263$
   0181 CCr02rCF      [ 3]  376 	jmp	00120$
   0184                     377 00263$:
                            378 ;printf.c:88: num=va_arg(va, unsigned int);
   0184 9E E6 07      [ 4]  379 	lda	7,s
   0187 AB 02         [ 2]  380 	add	#0x02
   0189 9E E7 0F      [ 4]  381 	sta	15,s
   018C 9E E6 06      [ 4]  382 	lda	6,s
   018F A9 00         [ 2]  383 	adc	#0
   0191 9E E7 0E      [ 4]  384 	sta	14,s
                            385 ;printf.c:83: switch (ch) {
   0194 A3 58         [ 2]  386 	cpx	#0x58
   0196 26 05         [ 3]  387 	bne	00264$
   0198 8B            [ 2]  388 	pshh
   0199 86            [ 2]  389 	pula
   019A 41 00 03      [ 4]  390 	cbeqa	#0x00,00266$
   019D                     391 00264$:
   019D 4F            [ 1]  392 	clra
   019E 20 02         [ 3]  393 	bra	00265$
   01A0                     394 00266$:
   01A0 A6 01         [ 2]  395 	lda	#0x01
   01A2                     396 00265$:
   01A2 9E E7 0D      [ 4]  397 	sta	13,s
                            398 ;printf.c:88: num=va_arg(va, unsigned int);
   01A5 9E E6 0F      [ 4]  399 	lda	15,s
   01A8 A0 02         [ 2]  400 	sub	#0x02
   01AA 9E E7 0C      [ 4]  401 	sta	12,s
   01AD 9E E6 0E      [ 4]  402 	lda	14,s
   01B0 A2 00         [ 2]  403 	sbc	#0
   01B2 9E E7 0B      [ 4]  404 	sta	11,s
   01B5 9E E6 0C      [ 4]  405 	lda	12,s
   01B8 9E E7 0A      [ 4]  406 	sta	10,s
   01BB 9E E6 0B      [ 4]  407 	lda	11,s
   01BE 9E E7 09      [ 4]  408 	sta	9,s
                            409 ;printf.c:83: switch (ch) {
   01C1 9E 6D 0D      [ 4]  410 	tst	13,s
   01C4 27 03         [ 3]  411 	beq	00267$
   01C6 CCr02r64      [ 3]  412 	jmp	00117$
   01C9                     413 00267$:
   01C9 A3 63         [ 2]  414 	cpx	#0x63
   01CB 26 09         [ 3]  415 	bne	00268$
   01CD 8B            [ 2]  416 	pshh
   01CE 86            [ 2]  417 	pula
   01CF A1 00         [ 2]  418 	cmp	#0x00
   01D1 26 03         [ 3]  419 	bne	00268$
   01D3 CCr02r9C      [ 3]  420 	jmp	00118$
   01D6                     421 00268$:
   01D6 A3 64         [ 2]  422 	cpx	#0x64
   01D8 26 05         [ 3]  423 	bne	00269$
   01DA 8B            [ 2]  424 	pshh
   01DB 86            [ 2]  425 	pula
   01DC 41 00 03      [ 4]  426 	cbeqa	#0x00,00271$
   01DF                     427 00269$:
   01DF 4F            [ 1]  428 	clra
   01E0 20 02         [ 3]  429 	bra	00270$
   01E2                     430 00271$:
   01E2 A6 01         [ 2]  431 	lda	#0x01
   01E4                     432 00270$:
   01E4 9E E7 08      [ 4]  433 	sta	8,s
   01E7 9E 6D 08      [ 4]  434 	tst	8,s
   01EA 26 1E         [ 3]  435 	bne	00112$
   01EC A3 73         [ 2]  436 	cpx	#0x73
   01EE 26 09         [ 3]  437 	bne	00273$
   01F0 8B            [ 2]  438 	pshh
   01F1 86            [ 2]  439 	pula
   01F2 A1 00         [ 2]  440 	cmp	#0x00
   01F4 26 03         [ 3]  441 	bne	00273$
   01F6 CCr02rB4      [ 3]  442 	jmp	00119$
   01F9                     443 00273$:
   01F9 A3 75         [ 2]  444 	cpx	#0x75
   01FB 26 05         [ 3]  445 	bne	00274$
   01FD 8B            [ 2]  446 	pshh
   01FE 86            [ 2]  447 	pula
   01FF 41 00 08      [ 4]  448 	cbeqa	#0x00,00112$
   0202                     449 00274$:
   0202 65 00 78      [ 3]  450 	cphx	#0x0078
   0205 27 5D         [ 3]  451 	beq	00117$
   0207 CCr02rD4      [ 3]  452 	jmp	00122$
                            453 ;printf.c:87: case 'd' : 
   020A                     454 00112$:
                            455 ;printf.c:88: num=va_arg(va, unsigned int);
   020A 95            [ 2]  456 	tsx
   020B E6 0D         [ 3]  457 	lda	13,x
   020D E7 05         [ 3]  458 	sta	5,x
   020F E6 0E         [ 3]  459 	lda	14,x
   0211 E7 06         [ 3]  460 	sta	6,x
   0213 E6 08         [ 3]  461 	lda	8,x
   0215 87            [ 2]  462 	psha
   0216 8A            [ 2]  463 	pulh
   0217 9E EE 0A      [ 4]  464 	ldx	10,s
   021A E6 01         [ 3]  465 	lda	1,x
   021C FE            [ 2]  466 	ldx	,x
   021D CFr00r0E      [ 4]  467 	stx	_num
   0220 C7r00r0F      [ 4]  468 	sta	(_num + 1)
                            469 ;printf.c:89: if (ch=='d' && (int)num<0) {
   0223 9E 6D 08      [ 4]  470 	tst	8,s
   0226 27 1A         [ 3]  471 	beq	00114$
   0228 87            [ 2]  472 	psha
   0229 9F            [ 1]  473 	txa
   022A A0 00         [ 2]  474 	sub	#0x00
   022C 86            [ 2]  475 	pula
   022D 90 13         [ 3]  476 	bge	00114$
                            477 ;printf.c:90: num = -(int)num;
   022F 40            [ 1]  478 	nega
   0230 C7r00r0F      [ 4]  479 	sta	(_num + 1)
   0233 4F            [ 1]  480 	clra
   0234 89            [ 2]  481 	pshx
   0235 9E E2 01      [ 4]  482 	sbc	1,s
   0238 A7 01         [ 2]  483 	ais	#1
   023A C7r00r0E      [ 4]  484 	sta	_num
                            485 ;printf.c:91: out('-');
   023D A6 2D         [ 2]  486 	lda	#0x2d
   023F CDr00r00      [ 5]  487 	jsr	_out
   0242                     488 00114$:
                            489 ;printf.c:93: divOut(10000);
   0242 A6 10         [ 2]  490 	lda	#0x10
   0244 AE 27         [ 2]  491 	ldx	#0x27
   0246 CDr00r44      [ 5]  492 	jsr	_divOut
                            493 ;printf.c:94: divOut(1000);
   0249 A6 E8         [ 2]  494 	lda	#0xe8
   024B AE 03         [ 2]  495 	ldx	#0x03
   024D CDr00r44      [ 5]  496 	jsr	_divOut
                            497 ;printf.c:95: divOut(100);
   0250 A6 64         [ 2]  498 	lda	#0x64
   0252 5F            [ 1]  499 	clrx
   0253 CDr00r44      [ 5]  500 	jsr	_divOut
                            501 ;printf.c:96: divOut(10);
   0256 A6 0A         [ 2]  502 	lda	#0x0a
   0258 5F            [ 1]  503 	clrx
   0259 CDr00r44      [ 5]  504 	jsr	_divOut
                            505 ;printf.c:97: outDgt(num);
   025C C6r00r0F      [ 4]  506 	lda	(_num + 1)
   025F CDr00r12      [ 5]  507 	jsr	_outDgt
                            508 ;printf.c:98: break;
   0262 20 70         [ 3]  509 	bra	00122$
                            510 ;printf.c:100: case 'X' : 
   0264                     511 00117$:
                            512 ;printf.c:101: uc= ch=='X';
   0264 95            [ 2]  513 	tsx
   0265 E6 0C         [ 3]  514 	lda	12,x
   0267 C7r00r10      [ 4]  515 	sta	_uc
                            516 ;printf.c:102: num=va_arg(va, unsigned int);
   026A E6 0D         [ 3]  517 	lda	13,x
   026C E7 05         [ 3]  518 	sta	5,x
   026E E6 0E         [ 3]  519 	lda	14,x
   0270 E7 06         [ 3]  520 	sta	6,x
   0272 E6 08         [ 3]  521 	lda	8,x
   0274 87            [ 2]  522 	psha
   0275 8A            [ 2]  523 	pulh
   0276 9E EE 0A      [ 4]  524 	ldx	10,s
   0279 F6            [ 2]  525 	lda	,x
   027A C7r00r0E      [ 4]  526 	sta	_num
   027D E6 01         [ 3]  527 	lda	1,x
   027F C7r00r0F      [ 4]  528 	sta	(_num + 1)
                            529 ;printf.c:103: divOut(0x1000);
   0282 4F            [ 1]  530 	clra
   0283 AE 10         [ 2]  531 	ldx	#0x10
   0285 CDr00r44      [ 5]  532 	jsr	_divOut
                            533 ;printf.c:104: divOut(0x100);
   0288 4F            [ 1]  534 	clra
   0289 AE 01         [ 2]  535 	ldx	#0x01
   028B CDr00r44      [ 5]  536 	jsr	_divOut
                            537 ;printf.c:105: divOut(0x10);
   028E A6 10         [ 2]  538 	lda	#0x10
   0290 5F            [ 1]  539 	clrx
   0291 CDr00r44      [ 5]  540 	jsr	_divOut
                            541 ;printf.c:106: outDgt(num);
   0294 C6r00r0F      [ 4]  542 	lda	(_num + 1)
   0297 CDr00r12      [ 5]  543 	jsr	_outDgt
                            544 ;printf.c:107: break;
   029A 20 38         [ 3]  545 	bra	00122$
                            546 ;printf.c:108: case 'c' : 
   029C                     547 00118$:
                            548 ;printf.c:109: out((char)(va_arg(va, int)));
   029C 95            [ 2]  549 	tsx
   029D E6 0D         [ 3]  550 	lda	13,x
   029F E7 05         [ 3]  551 	sta	5,x
   02A1 E6 0E         [ 3]  552 	lda	14,x
   02A3 E7 06         [ 3]  553 	sta	6,x
   02A5 E6 0A         [ 3]  554 	lda	10,x
   02A7 87            [ 2]  555 	psha
   02A8 8A            [ 2]  556 	pulh
   02A9 9E EE 0C      [ 4]  557 	ldx	12,s
   02AC E6 01         [ 3]  558 	lda	1,x
   02AE FE            [ 2]  559 	ldx	,x
   02AF CDr00r00      [ 5]  560 	jsr	_out
                            561 ;printf.c:110: break;
   02B2 20 20         [ 3]  562 	bra	00122$
                            563 ;printf.c:111: case 's' : 
   02B4                     564 00119$:
                            565 ;printf.c:112: p=va_arg(va, char*);
   02B4 95            [ 2]  566 	tsx
   02B5 E6 0D         [ 3]  567 	lda	13,x
   02B7 E7 05         [ 3]  568 	sta	5,x
   02B9 E6 0E         [ 3]  569 	lda	14,x
   02BB E7 06         [ 3]  570 	sta	6,x
   02BD E6 0A         [ 3]  571 	lda	10,x
   02BF 87            [ 2]  572 	psha
   02C0 8A            [ 2]  573 	pulh
   02C1 9E EE 0C      [ 4]  574 	ldx	12,s
   02C4 F6            [ 2]  575 	lda	,x
   02C5 9E E7 03      [ 4]  576 	sta	3,s
   02C8 E6 01         [ 3]  577 	lda	1,x
   02CA 9E E7 04      [ 4]  578 	sta	4,s
                            579 ;printf.c:113: break;
   02CD 20 05         [ 3]  580 	bra	00122$
                            581 ;printf.c:114: case '%' :
   02CF                     582 00120$:
                            583 ;printf.c:115: out('%');
   02CF A6 25         [ 2]  584 	lda	#0x25
   02D1 CDr00r00      [ 5]  585 	jsr	_out
                            586 ;printf.c:118: }
   02D4                     587 00122$:
                            588 ;printf.c:119: *bf=0;
   02D4 C6r00r00      [ 4]  589 	lda	_bf
   02D7 CEr00r01      [ 4]  590 	ldx	(_bf + 1)
   02DA 87            [ 2]  591 	psha
   02DB 8A            [ 2]  592 	pulh
   02DC 4F            [ 1]  593 	clra
   02DD F7            [ 2]  594 	sta	,x
                            595 ;printf.c:120: bf=p;
   02DE 95            [ 2]  596 	tsx
   02DF E6 02         [ 3]  597 	lda	2,x
   02E1 C7r00r00      [ 4]  598 	sta	_bf
   02E4 E6 03         [ 3]  599 	lda	3,x
   02E6 C7r00r01      [ 4]  600 	sta	(_bf + 1)
                            601 ;printf.c:121: while (*bf++ && w > 0)
   02E9 E6 01         [ 3]  602 	lda	1,x
   02EB                     603 00124$:
   02EB CEr00r00      [ 4]  604 	ldx	_bf
   02EE 89            [ 2]  605 	pshx
   02EF 8A            [ 2]  606 	pulh
   02F0 CEr00r01      [ 4]  607 	ldx	(_bf + 1)
   02F3 87            [ 2]  608 	psha
   02F4 F6            [ 2]  609 	lda	,x
   02F5 9E E7 09      [ 4]  610 	sta	9,s
   02F8 86            [ 2]  611 	pula
   02F9 AF 01         [ 2]  612 	aix	#1
   02FB CFr00r01      [ 4]  613 	stx	(_bf + 1)
   02FE 89            [ 2]  614 	pshx
   02FF 8B            [ 2]  615 	pshh
   0300 88            [ 2]  616 	pulx
   0301 CFr00r00      [ 4]  617 	stx	_bf
   0304 88            [ 2]  618 	pulx
   0305 9E 6D 08      [ 4]  619 	tst	8,s
   0308 27 06         [ 3]  620 	beq	00168$
   030A 4D            [ 1]  621 	tsta
   030B 27 03         [ 3]  622 	beq	00168$
                            623 ;printf.c:122: w--;
   030D 4A            [ 1]  624 	deca
   030E 20 DB         [ 3]  625 	bra	00124$
                            626 ;printf.c:123: while (w-- > 0) 
   0310                     627 00168$:
   0310                     628 00127$:
   0310 97            [ 1]  629 	tax
   0311 4A            [ 1]  630 	deca
   0312 5D            [ 1]  631 	tstx
   0313 27 15         [ 3]  632 	beq	00170$
                            633 ;printf.c:124: putchar(lz ? '0' : ' ');
   0315 9E 6D 01      [ 4]  634 	tst	1,s
   0318 27 05         [ 3]  635 	beq	00142$
   031A 45 00 30      [ 3]  636 	ldhx	#0x0030
   031D 20 03         [ 3]  637 	bra	00143$
   031F                     638 00142$:
   031F 45 00 20      [ 3]  639 	ldhx	#0x0020
   0322                     640 00143$:
   0322 87            [ 2]  641 	psha
   0323 9F            [ 1]  642 	txa
   0324 CDr00r00      [ 5]  643 	jsr	_putchar
   0327 86            [ 2]  644 	pula
   0328 20 E6         [ 3]  645 	bra	00127$
                            646 ;printf.c:125: while ((ch= *p++))
   032A                     647 00170$:
   032A 9E E6 03      [ 4]  648 	lda	3,s
   032D 87            [ 2]  649 	psha
   032E 8A            [ 2]  650 	pulh
   032F 9E EE 04      [ 4]  651 	ldx	4,s
   0332                     652 00130$:
   0332 F6            [ 2]  653 	lda	,x
   0333 AF 01         [ 2]  654 	aix	#1
   0335 4D            [ 1]  655 	tsta
   0336 26 03         [ 3]  656 	bne	00282$
   0338 CCr00r89      [ 3]  657 	jmp	00136$
   033B                     658 00282$:
                            659 ;printf.c:126: putchar(ch);
   033B 89            [ 2]  660 	pshx
   033C 8B            [ 2]  661 	pshh
   033D CDr00r00      [ 5]  662 	jsr	_putchar
   0340 8A            [ 2]  663 	pulh
   0341 88            [ 2]  664 	pulx
   0342 20 EE         [ 3]  665 	bra	00130$
                            666 ;printf.c:130: va_end(va);
   0344                     667 00140$:
   0344 A7 0F         [ 2]  668 	ais	#15
   0346 81            [ 4]  669 	rts
                            670 	.area CSEG    (CODE)
                            671 	.area CONST   (CODE)
                            672 	.area XINIT   (CODE)
                            673 	.area CABS    (ABS,CODE)
